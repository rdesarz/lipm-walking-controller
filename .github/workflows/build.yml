name: Build and tests
on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install project + dev extras
        run: pip install ".[dev]"

      - name: Lint (pylint)
        run: pylint lipm_walking_controller || true  # drop `|| true` if you want hard fail

  tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install project + test deps
        run: pip install ".[dev]" pytest pytest-cov
      - name: Run tests with coverage
        run: |
          pytest -q \
            --cov=lipm_walking_controller \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html
      - name: Upload HTML coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ matrix.python-version }}
          path: htmlcov
      - name: Upload coverage XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml